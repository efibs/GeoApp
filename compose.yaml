services:
  geoappapi:
    image: geoappapi
    ports:
      - 8080:8080
    build:
      context: .
      dockerfile: GeoAppAPI/Dockerfile
    depends_on:
      postgresqldb:
        condition: service_healthy
  influxdb:
    image: influxdb:2
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb-admin-token
      DOCKER_INFLUXDB_INIT_ORG: docs
      DOCKER_INFLUXDB_INIT_BUCKET: home
    secrets:
      - influxdb-admin-username
      - influxdb-admin-password
      - influxdb-admin-token
    volumes:
      - type: volume
        source: influxdb-data
        target: /var/lib/influxdb
      - type: volume
        source: influxdb-config
        target: /etc/influxdb
  postgresqldb:
    image: postgres:17
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgresqldb-password
      POSTGRES_USER_FILE: /run/secrets/postgresqldb-username
      POSTGRES_DB: geoapp
    volumes:
      - type: volume
        source: postgresqldb-data
        target: /var/lib/postgresql/data
      - ./postgresql-healthcheck.sh:/postgresql-healthcheck.sh:ro
    secrets:
      - postgresqldb-username
      - postgresqldb-password
    healthcheck:
      test: [ "CMD", "/postgresql-healthcheck.sh" ]
      interval: 5s
      timeout: 5s
      retries: 5
secrets:
  influxdb-admin-username:
    file: ./GeoAppAPI/.env.influxdb-admin-username
  influxdb-admin-password:
    file: ./GeoAppAPI/.env.influxdb-admin-password
  influxdb-admin-token:
    file: ./GeoAppAPI/.env.influxdb-admin-token
  postgresqldb-username:
    file: ./GeoAppAPI/.env.postgresqldb-username
  postgresqldb-password:
    file: ./GeoAppAPI/.env.postgresqldb-password
volumes:
  influxdb-data:
  influxdb-config:
  postgresqldb-data:
